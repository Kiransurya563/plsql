			PL/SQL

-> PL/SQL is a combination of SQL and procedural programming constructs, 
   enabling developers to write code that performs database operations efficiently. 
-> It was developed by Oracle to enhance SQL’s capabilities and allow for advanced 
   error handling, complex calculations, and programmatic control over database operations.

      PL/SQL  is a procedural language extension for sql.
	Oracle 6.0 introduced PL/SQL.
      PL/SQL code is executed through procedural statement executer while SQL command
        through SQL statement executer. 

Key featuresPL/SQL allows developers to:

1. Block Structure: PL/SQL can execute a number of queries in one block using single command.
2. Procedural Constructs: One can create a PL/SQL unit such as procedures, functions, packages, 
   triggers, and types, which are stored in the database for reuse by applications.
3. Error Handling: PL/SQL provides a feature to handle the exception which occurs in PL/SQL block
   known as exception handling block.
4. Reusable Code: Create stored procedures, functions, triggers, and packages, which can be executed
   repeatedly.
5. Performance: Reduces network traffic by executing multiple SQL statements within a single block

TO VIEW VERSION OF  PL/SQL.

SELECT * 
FROM V$VERSION ;

BASICALLY PL/SQL IS A BLOCK STRUCTURED:

DECLARE [optional]
    declaration statements;

BEGIN
    executable statements

EXCEPTIONS [optional]
    exception handling statements

END;
/

PL/SQL code is written in blocks, which consist of three main sections:

Declare section starts with DECLARE keyword in which variables, constants, 
records as cursors can be declared which stores data temporarily. It basically
consists definition of PL/SQL identifiers. This part of the code is optional.

Execution section starts with BEGIN and ends with END keyword.This is a mandatory 
section and here the program logic is written to perform any task like loops and 
conditional statements. It supports all DML commands, DDL commands and SQL*PLUS 
built-in functions as well.

Exception section starts with EXCEPTION keyword.This section is optional which contains
statements that are executed when a run-time error occurs. Any exceptions can be handled
in this section.

There are two types of blocks supported by pl/sql :
	1.ANNOYMOUS BLOCK 
	2.NAMED BLOCK 

ANNOYMOUS BLOCK:

	These block does not have a name and also not stored in database .
	We are not supposed to call these blocks in another blocks or in client application .
EXAMPLE :
	DECLARE 
	--
 	BEGIN 
	--
	--
	END ;

 NAMED BLOCK:
	There blocks are having a name and also automatically stored in database.
	These blocks used by all the types of programmers in all the application 

	There are :
    •  PROCEDURE 
    •  FUNCTION 
    •  TRIGGERS
    •  PACKAGES ..ETC 



VARIABLE 
	Variable is used to store a single value into memory location

SYNTAX: 
		VARIABLE_NAME DATATYPE(SIZE);

          EXAMPLE:

		V_NAME VARCHAR(20) ;

 Generally we are declaring variable in declare section of pl/sql blocks .
     EXAMPLES:

	DECLARE 
	     V_NAME VARCHAR(20);
	     V_AGE NUMBER(2);
	     V_SAL NUMBER(7);


HOW TO STORE THE VALUES INTO A VARIABLE.

Using assignment operator ( :=) we used to store the values into a variables

       SYNTAX:
		VARIABLE_NAME := VALUE ;
       EXAMPLE:
		V_AGE := 60 ;
TO DISPLAY THE MESSAGES :

	DBMS_OUTPUT.PUT_LINE( 'MESSAGES');
	DBMS_OUTPUT.PUT_LINE( V_AGE);

TO DISPLAY ANY RESULT WITH IN THE PLSQL BLOCKS:

	SET SERVEROUTPUT ON ;
EXAMPLE1: 
	BEGIN
  	   DBMS_OUTPUT.PUT_LINE( 'HELLO WORLD');
	END ;
	/
O/P:
	HELLO WORLD	

EXAMPLE2: 
	DECLARE 
	 V_NAME VARCHAR(20) := 'ARCHANA' ;
	BEGIN
  	   DBMS_OUTPUT.PUT_LINE( 'WELCOME TO PLSQL WORLD :'||V_NAME);
	END ;
	/
O/P:

WELCOME TO PLSQL WORLD :ARCHANA

----------------------------------------------------------
	DECLARE 
	 V_NAME VARCHAR(20) := '&V_NAME' ;
	BEGIN
  	   DBMS_OUTPUT.PUT_LINE( 'WELCOME TO PLSQL WORLD :'||V_NAME);
	END ;
	/
